import type { Metadata } from "next";
import "./globals.css";
import Link from "next/link";
import { Suspense } from "react";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));

function ListItemLoading() {
  return (
    <div className=" h-[64px] grid items-center">
      <div role="status" className="w-full animate-pulse">
        <div className="h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-full "></div>
        <span className="sr-only">Loading...</span>
      </div>
      <div className="flex items-center justify-between">
        <div role="status" className="w-12 animate-pulse">
          <div className="h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-full "></div>
          <span className="sr-only">Loading...</span>
        </div>
        <div role="status" className="w-16 animate-pulse">
          <div className="h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-full "></div>
          <span className="sr-only">Loading...</span>
        </div>
      </div>
    </div>
  );
}

async function ListItem({ id }: { id: number }) {
  await sleep(Math.random() * 3000);
  const post = await fetch(
    `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`
  ).then(
    (res) => res.json() as Promise<{ title: string; url: string; by: string }>
  );
  return (
    <div className="flex flex-col gap-2 h-[64px] ">
      <p className="truncate"> {post.title || post.by}</p>
      <div className="flex flex-row items-center opacity-50 justify-between">
        <p>{post.by}</p>
        <p>Visit website {`>>`}</p>
      </div>
    </div>
  );
}

export default async function RootLayout({ children }: { children: any }) {
  const posts = await fetch(
    `https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty&limitToFirst=10&orderBy="$key"`
  ).then((res) => res.json() as Promise<number[]>);
  return (
    <html lang="en">
      <body className="grid h-screen grid-rows-[60px,1fr]">
        <header className="grid place-content-center bg-yellow-400 font-semibold text-black">
          Uizard Hackernewa Reader
        </header>
        <main className="grid grid-cols-[320px,1fr] gap-4">
          <aside>
            <ul className="flex  p-4 flex-col gap-4  ">
              {posts.map((id) => (
                <Link key={id} href={`/${id}`}>
                  <Suspense fallback={<ListItemLoading />}>
                    <ListItem id={id} />
                  </Suspense>
                </Link>
              ))}
            </ul>
          </aside>
          <section>{children}</section>
        </main>
      </body>
    </html>
  );
}
